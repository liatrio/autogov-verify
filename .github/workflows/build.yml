name: Build and Test

on:
  pull_request:
    branches: [main]
  push:
    paths-ignore:
      - README.md
      - catalog-info.yaml
      - renovate.json
    tags:
      - v*

env:
  GITHUB_TOKEN: ${{ secrets.UTIL_REPO_ACCESS }}

jobs:
  lint:
    name: lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      - uses: actions/setup-go@3041bf56c941b39c61721a86cd11f3bb1338122a # v5
        with:
          go-version: "1.23.4"
          cache: true
          cache-dependency-path: go.sum
      - name: Install golangci-lint
        uses: golangci/golangci-lint-action@1481404843c368bc19ca9406f87d6e0fc97bdcfd # v7
        with:
          version: v1.62.0
          args: --timeout=5m
          only-new-issues: true
      - name: Run linter
        run: golangci-lint run

  test:
    name: test
    runs-on: ubuntu-latest
    permissions:
      contents: read
    needs: [lint]
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - uses: actions/setup-go@3041bf56c941b39c61721a86cd11f3bb1338122a # v5.2.0
        with:
          go-version: "1.23.4"
          cache: true
          cache-dependency-path: go.sum
      - name: Run tests
        run: make test
      - name: Upload coverage report
        uses: actions/upload-artifact@65c4c4a1ddee5b72f698fdd19549f0f0fb45cf08 # v4.6.0
        with:
          name: coverage-report
          path: coverage.out

  build:
    name: build
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    needs: [test]
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - uses: actions/setup-go@3041bf56c941b39c61721a86cd11f3bb1338122a # v5.2.0
        with:
          go-version: "1.23.4"
          cache: true
          cache-dependency-path: go.sum
      - name: Build
        run: |
          mkdir -p bin
          VERSION=${{ github.ref_name }}
          if [[ "${{ github.ref_type }}" == "branch" ]]; then
            VERSION="${VERSION}-${GITHUB_SHA::8}"
          fi
          echo "VERSION=${VERSION}" >> $GITHUB_ENV
          go build -ldflags "-X main.version=${VERSION}" -o bin/autogov-verify .
      - name: Install Binary
        run: |
          sudo cp bin/autogov-verify /usr/local/bin/
          autogov-verify --help
      - name: Upload binary
        uses: actions/upload-artifact@65c4c4a1ddee5b72f698fdd19549f0f0fb45cf08 # v4.6.0
        with:
          name: autogov-verify
          path: bin/autogov-verify
